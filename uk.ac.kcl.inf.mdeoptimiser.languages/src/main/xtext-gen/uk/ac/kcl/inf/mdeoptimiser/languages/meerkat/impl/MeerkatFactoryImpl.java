/**
 * generated by Xtext 2.18.0
 */
package uk.ac.kcl.inf.mdeoptimiser.languages.meerkat.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import uk.ac.kcl.inf.mdeoptimiser.languages.meerkat.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class MeerkatFactoryImpl extends EFactoryImpl implements MeerkatFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static MeerkatFactory init()
  {
    try
    {
      MeerkatFactory theMeerkatFactory = (MeerkatFactory)EPackage.Registry.INSTANCE.getEFactory(MeerkatPackage.eNS_URI);
      if (theMeerkatFactory != null)
      {
        return theMeerkatFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new MeerkatFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MeerkatFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case MeerkatPackage.ANALYSER: return createAnalyser();
      case MeerkatPackage.PROBLEM: return createProblem();
      case MeerkatPackage.PROBLEM_CONFIGURATION: return createProblemConfiguration();
      case MeerkatPackage.MODEL: return createModel();
      case MeerkatPackage.ANALYSIS_CONFIGURATION: return createAnalysisConfiguration();
      case MeerkatPackage.SUMMARY: return createSummary();
      case MeerkatPackage.OBJECTIVE: return createObjective();
      case MeerkatPackage.CONSTRAINT: return createConstraint();
      case MeerkatPackage.BATCHES: return createBatches();
      case MeerkatPackage.TERMINATION_CONDITION: return createTerminationCondition();
      case MeerkatPackage.TOOL: return createTool();
      case MeerkatPackage.TOOL_CONFIGURATION: return createToolConfiguration();
      case MeerkatPackage.REFERENCE_SET: return createReferenceSet();
      case MeerkatPackage.PARAMETER: return createParameter();
      case MeerkatPackage.PARAMETER_VALUE: return createParameterValue();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Analyser createAnalyser()
  {
    AnalyserImpl analyser = new AnalyserImpl();
    return analyser;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Problem createProblem()
  {
    ProblemImpl problem = new ProblemImpl();
    return problem;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ProblemConfiguration createProblemConfiguration()
  {
    ProblemConfigurationImpl problemConfiguration = new ProblemConfigurationImpl();
    return problemConfiguration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Model createModel()
  {
    ModelImpl model = new ModelImpl();
    return model;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AnalysisConfiguration createAnalysisConfiguration()
  {
    AnalysisConfigurationImpl analysisConfiguration = new AnalysisConfigurationImpl();
    return analysisConfiguration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Summary createSummary()
  {
    SummaryImpl summary = new SummaryImpl();
    return summary;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Objective createObjective()
  {
    ObjectiveImpl objective = new ObjectiveImpl();
    return objective;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Constraint createConstraint()
  {
    ConstraintImpl constraint = new ConstraintImpl();
    return constraint;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Batches createBatches()
  {
    BatchesImpl batches = new BatchesImpl();
    return batches;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TerminationCondition createTerminationCondition()
  {
    TerminationConditionImpl terminationCondition = new TerminationConditionImpl();
    return terminationCondition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Tool createTool()
  {
    ToolImpl tool = new ToolImpl();
    return tool;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ToolConfiguration createToolConfiguration()
  {
    ToolConfigurationImpl toolConfiguration = new ToolConfigurationImpl();
    return toolConfiguration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ReferenceSet createReferenceSet()
  {
    ReferenceSetImpl referenceSet = new ReferenceSetImpl();
    return referenceSet;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Parameter createParameter()
  {
    ParameterImpl parameter = new ParameterImpl();
    return parameter;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ParameterValue createParameterValue()
  {
    ParameterValueImpl parameterValue = new ParameterValueImpl();
    return parameterValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MeerkatPackage getMeerkatPackage()
  {
    return (MeerkatPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static MeerkatPackage getPackage()
  {
    return MeerkatPackage.eINSTANCE;
  }

} //MeerkatFactoryImpl
