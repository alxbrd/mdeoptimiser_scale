/**
 * generated by Xtext 2.18.0
 */
package uk.ac.kcl.inf.mdeoptimiser.languages.meerkat.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import uk.ac.kcl.inf.mdeoptimiser.languages.meerkat.AnalysisConfiguration;
import uk.ac.kcl.inf.mdeoptimiser.languages.meerkat.MeerkatPackage;
import uk.ac.kcl.inf.mdeoptimiser.languages.meerkat.ReferenceSet;
import uk.ac.kcl.inf.mdeoptimiser.languages.meerkat.Summary;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Analysis Configuration</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link uk.ac.kcl.inf.mdeoptimiser.languages.meerkat.impl.AnalysisConfigurationImpl#getReferenceSet <em>Reference Set</em>}</li>
 *   <li>{@link uk.ac.kcl.inf.mdeoptimiser.languages.meerkat.impl.AnalysisConfigurationImpl#getSummary <em>Summary</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AnalysisConfigurationImpl extends MinimalEObjectImpl.Container implements AnalysisConfiguration
{
  /**
   * The cached value of the '{@link #getReferenceSet() <em>Reference Set</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReferenceSet()
   * @generated
   * @ordered
   */
  protected ReferenceSet referenceSet;

  /**
   * The cached value of the '{@link #getSummary() <em>Summary</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSummary()
   * @generated
   * @ordered
   */
  protected Summary summary;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AnalysisConfigurationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MeerkatPackage.Literals.ANALYSIS_CONFIGURATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ReferenceSet getReferenceSet()
  {
    return referenceSet;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetReferenceSet(ReferenceSet newReferenceSet, NotificationChain msgs)
  {
    ReferenceSet oldReferenceSet = referenceSet;
    referenceSet = newReferenceSet;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MeerkatPackage.ANALYSIS_CONFIGURATION__REFERENCE_SET, oldReferenceSet, newReferenceSet);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setReferenceSet(ReferenceSet newReferenceSet)
  {
    if (newReferenceSet != referenceSet)
    {
      NotificationChain msgs = null;
      if (referenceSet != null)
        msgs = ((InternalEObject)referenceSet).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MeerkatPackage.ANALYSIS_CONFIGURATION__REFERENCE_SET, null, msgs);
      if (newReferenceSet != null)
        msgs = ((InternalEObject)newReferenceSet).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MeerkatPackage.ANALYSIS_CONFIGURATION__REFERENCE_SET, null, msgs);
      msgs = basicSetReferenceSet(newReferenceSet, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MeerkatPackage.ANALYSIS_CONFIGURATION__REFERENCE_SET, newReferenceSet, newReferenceSet));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Summary getSummary()
  {
    return summary;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSummary(Summary newSummary, NotificationChain msgs)
  {
    Summary oldSummary = summary;
    summary = newSummary;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MeerkatPackage.ANALYSIS_CONFIGURATION__SUMMARY, oldSummary, newSummary);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSummary(Summary newSummary)
  {
    if (newSummary != summary)
    {
      NotificationChain msgs = null;
      if (summary != null)
        msgs = ((InternalEObject)summary).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MeerkatPackage.ANALYSIS_CONFIGURATION__SUMMARY, null, msgs);
      if (newSummary != null)
        msgs = ((InternalEObject)newSummary).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MeerkatPackage.ANALYSIS_CONFIGURATION__SUMMARY, null, msgs);
      msgs = basicSetSummary(newSummary, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MeerkatPackage.ANALYSIS_CONFIGURATION__SUMMARY, newSummary, newSummary));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MeerkatPackage.ANALYSIS_CONFIGURATION__REFERENCE_SET:
        return basicSetReferenceSet(null, msgs);
      case MeerkatPackage.ANALYSIS_CONFIGURATION__SUMMARY:
        return basicSetSummary(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MeerkatPackage.ANALYSIS_CONFIGURATION__REFERENCE_SET:
        return getReferenceSet();
      case MeerkatPackage.ANALYSIS_CONFIGURATION__SUMMARY:
        return getSummary();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MeerkatPackage.ANALYSIS_CONFIGURATION__REFERENCE_SET:
        setReferenceSet((ReferenceSet)newValue);
        return;
      case MeerkatPackage.ANALYSIS_CONFIGURATION__SUMMARY:
        setSummary((Summary)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MeerkatPackage.ANALYSIS_CONFIGURATION__REFERENCE_SET:
        setReferenceSet((ReferenceSet)null);
        return;
      case MeerkatPackage.ANALYSIS_CONFIGURATION__SUMMARY:
        setSummary((Summary)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MeerkatPackage.ANALYSIS_CONFIGURATION__REFERENCE_SET:
        return referenceSet != null;
      case MeerkatPackage.ANALYSIS_CONFIGURATION__SUMMARY:
        return summary != null;
    }
    return super.eIsSet(featureID);
  }

} //AnalysisConfigurationImpl
